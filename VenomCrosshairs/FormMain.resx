<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>